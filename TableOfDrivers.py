# Form implementation generated from reading ui file 'TableOfDrivers.ui'
#
# Created by: PyQt6 UI code generator 6.2.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QHeaderView

import bd_main


class Ui_Form(object):
    def setupUi(self, Form):
        self.con = bd_main.connect()
        self.mycursor = self.con.cursor()
        Form.setObjectName("Form")
        Form.resize(500, 350)
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(20, 90, 460, 245))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.Registry = QtWidgets.QLabel(Form)
        self.Registry.setGeometry(QtCore.QRect(0, 20, 500, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.Registry.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading | QtCore.Qt.AlignmentFlag.AlignHCenter | QtCore.Qt.AlignmentFlag.AlignVCenter)

        self.Registry.setFont(font)
        self.Registry.setObjectName("Registry")
        self.EnterName = QtWidgets.QPlainTextEdit(Form)
        self.EnterName.setPlaceholderText("Введите имя...")
        self.EnterName.setGeometry(QtCore.QRect(20, 50, 460, 25))
        self.EnterName.setObjectName("EnterName")
        self.ClearName = QtWidgets.QPushButton(Form)
        self.ClearName.setGeometry(QtCore.QRect(455, 49, 27, 27))
        self.ClearName.setObjectName("ClearName")
        self.tableWidget.horizontalHeader().setSectionResizeMode(1, QHeaderView.ResizeMode.ResizeToContents)
        self.tableWidget.verticalHeader().setVisible(False)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger(False))
        self.FillTable()
        self.EnterName.textChanged.connect(lambda: self.NameSearch())
        self.ClearName.clicked.connect(lambda: self.ClearEnterName())

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Реестр водителей"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "ID водителя"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "ФИО"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Кол-во активных штрафов"))
        self.Registry.setText(_translate("Form", "Реестр водителей"))
        self.ClearName.setText(_translate("Form", "✕"))



    def NameSearch(self):
        self.tableWidget.clearContents()
        self.tableWidget.setRowCount(0)
        self.name = self.EnterName.toPlainText()
        query = f"SELECT * FROM driver_list WHERE FCS LIKE '%{self.name}%'"
        self.mycursor.execute(query)
        self.con.commit()
        res = self.mycursor.fetchall()
        resLen = len(res)
        for i in range(0, resLen):
            self.AddRow(res[i][0], res[i][1], res[i][2])

    def ClearEnterName(self):
        self.EnterName.clear()

    def AddRow(self, driver_ID, FCS, countOfFines):
        rowPosition = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowPosition)

        self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(str(driver_ID)))
        self.tableWidget.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(FCS))
        self.tableWidget.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(str(countOfFines)))

    def FillTable(self):
        self.tableWidget.clearContents()
        self.tableWidget.setRowCount(0)
        query = f"SELECT * FROM driver_list"
        self.mycursor.execute(query)
        self.con.commit()
        allDrivers = self.mycursor.fetchall()
        countIfDrivers = len(allDrivers)
        for i in range(0, countIfDrivers):
            self.AddRow(allDrivers[i][0], allDrivers[i][1], allDrivers[i][2])