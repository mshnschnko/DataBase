# Form implementation generated from reading ui file 'FinePaymentReg.ui'
#
# Created by: PyQt6 UI code generator 6.2.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import datetime

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox

import bd_main

class Ui_FinePaymentReg(object):
    def setupUi(self, FinePaymentReg):
        self.con = bd_main.connect()
        self.mycursor = self.con.cursor()
        FinePaymentReg.setObjectName("FinePaymentReg")
        FinePaymentReg.resize(640, 550)
        self.Registry = QtWidgets.QLabel(FinePaymentReg)
        self.Registry.setGeometry(QtCore.QRect(0, 20, 640, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.Registry.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading | QtCore.Qt.AlignmentFlag.AlignHCenter | QtCore.Qt.AlignmentFlag.AlignVCenter)

        self.Registry.setFont(font)
        self.Registry.setObjectName("Registry")
        self.EnterName = QtWidgets.QPlainTextEdit(FinePaymentReg)
        self.EnterName.setGeometry(QtCore.QRect(90, 50, 530, 25))
        self.EnterName.setObjectName("EnterName")
        self.ClearName = QtWidgets.QPushButton(FinePaymentReg)
        self.ClearName.setGeometry(QtCore.QRect(595, 49, 27, 27))
        self.ClearName.setObjectName("ClearName")
        self.FinesTable = QtWidgets.QTableWidget(FinePaymentReg)
        self.FinesTable.setGeometry(QtCore.QRect(20, 90, 600, 300))
        self.FinesTable.setObjectName("FinesTable")
        self.FinesTable.setColumnCount(6)
        self.FinesTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.FinesTable.setHorizontalHeaderItem(5, item)
        self.FinesTable.horizontalHeader().setSortIndicatorShown(True)
        self.FinesTable.setSortingEnabled(True)
        self.driverLabel = QtWidgets.QLabel(FinePaymentReg)
        self.driverLabel.setGeometry(QtCore.QRect(20, 50, 55, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.driverLabel.setFont(font)
        self.driverLabel.setObjectName("driverLabel")
        self.currentFineLabel = QtWidgets.QLabel(FinePaymentReg)
        self.currentFineLabel.setGeometry(QtCore.QRect(251, 405, 138, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.currentFineLabel.setFont(font)
        self.currentFineLabel.setObjectName("currentFineLabel")
        self.currentDriverLabel = QtWidgets.QLabel(FinePaymentReg)
        self.currentDriverLabel.setGeometry(QtCore.QRect(20, 440, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.currentDriverLabel.setFont(font)
        self.currentDriverLabel.setObjectName("currentDriverLabel")
        self.currentViolationLabel = QtWidgets.QLabel(FinePaymentReg)
        self.currentViolationLabel.setGeometry(QtCore.QRect(20, 470, 71, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.currentViolationLabel.setFont(font)
        self.currentViolationLabel.setObjectName("currentViolationLabel")
        self.currentSum = QtWidgets.QLabel(FinePaymentReg)
        self.currentSum.setGeometry(QtCore.QRect(20, 500, 42, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.currentSum.setFont(font)
        self.currentSum.setObjectName("currentSum")
        self.driverText = QtWidgets.QTextBrowser(FinePaymentReg)
        self.driverText.setGeometry(QtCore.QRect(110, 439, 350, 27))
        self.driverText.setObjectName("driverText")
        self.violationText = QtWidgets.QTextBrowser(FinePaymentReg)
        self.violationText.setGeometry(QtCore.QRect(110, 469, 350, 27))
        self.violationText.setObjectName("violationText")
        self.sumText = QtWidgets.QTextBrowser(FinePaymentReg)
        self.sumText.setGeometry(QtCore.QRect(110, 499, 100, 27))
        self.sumText.setObjectName("sumText")
        self.ApplyBtn = QtWidgets.QPushButton(FinePaymentReg)
        self.ApplyBtn.setGeometry(QtCore.QRect(540, 500, 75, 23))
        self.ApplyBtn.setEnabled(False)
        self.ApplyBtn.setObjectName("ApplyBtn")
        self.instructions = QtWidgets.QLabel(FinePaymentReg)
        self.instructions.setGeometry(QtCore.QRect(475, 425, 140, 70))
        self.instructions.setWordWrap(True)
        self.instructions.setObjectName("label")

        self.retranslateUi(FinePaymentReg)
        QtCore.QMetaObject.connectSlotsByName(FinePaymentReg)

        self.FinesTable.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger(False))
        self.FinesTable.itemSelectionChanged.connect(lambda: self.SelectedRow())
        self.EnterName.textChanged.connect(lambda: self.NameSearch())
        self.ClearName.clicked.connect(lambda: self.ClearEnterName())
        self.ApplyBtn.clicked.connect(lambda: self.PaymentRedistration())

        self.FinesTable.verticalHeader().setVisible(False)
        self.FillTable()

    def retranslateUi(self, FinePaymentReg):
        _translate = QtCore.QCoreApplication.translate
        FinePaymentReg.setWindowTitle(_translate("FinePaymentReg", "Регистрация оплаты штрафа"))
        self.Registry.setText(_translate("FinePaymentReg", "Регистрация оплаты штрафа"))
        self.EnterName.setPlaceholderText(_translate("FinePaymentReg", "Введите имя..."))
        self.ClearName.setText(_translate("FinePaymentReg", "✕"))
        item = self.FinesTable.horizontalHeaderItem(0)
        item.setText(_translate("FinePaymentReg", "ID штрафа"))
        item = self.FinesTable.horizontalHeaderItem(1)
        item.setText(_translate("FinePaymentReg", "ID водителя"))
        item = self.FinesTable.horizontalHeaderItem(2)
        item.setText(_translate("FinePaymentReg", "ФИО"))
        item = self.FinesTable.horizontalHeaderItem(3)
        item.setText(_translate("FinePaymentReg", "Нарушение"))
        item = self.FinesTable.horizontalHeaderItem(4)
        item.setText(_translate("FinePaymentReg", "Сумма"))
        item = self.FinesTable.horizontalHeaderItem(5)
        item.setText(_translate("FinePaymentReg", "Дата штрафа"))
        self.driverLabel.setText(_translate("FinePaymentReg", "Водитель"))
        self.currentFineLabel.setText(_translate("FinePaymentReg", "Выбранный штраф"))
        self.currentDriverLabel.setText(_translate("FinePaymentReg", "Водитель:"))
        self.currentViolationLabel.setText(_translate("FinePaymentReg", "Нарушение:"))
        self.currentSum.setText(_translate("FinePaymentReg", "Сумма:"))
        self.driverText.setHtml(_translate("FinePaymentReg", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.violationText.setHtml(_translate("FinePaymentReg", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.sumText.setHtml(_translate("FinePaymentReg", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.ApplyBtn.setText(_translate("FinePaymentReg", "Принять"))
        self.instructions.setText(_translate("FinePaymentReg", "Выберите любую ячейку из строки, соответствующей оплачиваемому штрафу"))

    def PaymentRedistration(self):
        selectedItems = self.FinesTable.selectedItems()
        selectedRow = self.FinesTable.currentItem().row()
        selectedItemslen = len(selectedItems)
        date_str = str(datetime.date.today())
        if (selectedItemslen == 1):
            query = f"INSERT INTO bank (check_ID, pay_date, sum) VALUES ({int(self.FinesTable.item(selectedRow, 0).text())}, '{date_str}', {int(self.FinesTable.item(selectedRow, 4).text())});"
            self.mycursor.execute(query)
            self.con.commit()
            query = f"UPDATE driver_list SET fine_count = fine_count - 1 WHERE driver_ID = {int(self.FinesTable.item(selectedRow, 1).text())}"
            self.mycursor.execute(query)
            self.con.commit()
            query = f"UPDATE driver_violation SET has_the_fine_been_paid = 1 WHERE relation_ID = {int(self.FinesTable.item(selectedRow, 0).text())};"
            self.mycursor.execute(query)
            self.con.commit()
            Success = QMessageBox()
            Success.setWindowTitle("Выполнено")
            Success.setText("Штраф успешно оплачен")
            Success.setIcon(QMessageBox.Icon.Information)
            Success.exec()
            self.ClearEnterName()
            self.FillTable()


    def ClearEnterName(self):
        self.EnterName.clear()
        self.FillTable()

    def NameSearch(self):
        self.driverText.clear()
        self.violationText.clear()
        self.sumText.clear()
        self.ApplyBtn.setEnabled(False)
        self.FinesTable.clearContents()
        self.FinesTable.setRowCount(0)
        self.name = self.EnterName.toPlainText()
        query = f"SELECT * FROM driver_violation WHERE FCS LIKE '%{self.name}%' AND has_the_fine_been_paid = 0;"
        self.mycursor.execute(query)
        self.con.commit()
        allInfo = self.mycursor.fetchall()
        countIfFines = len(allInfo)
        for i in range(0, countIfFines):
            query = f"SELECT violation FROM violation_list WHERE violation_ID = {allInfo[i][3]}"
            self.mycursor.execute(query)
            self.con.commit()
            (violation,) = self.mycursor.fetchone()
            self.AddRow(allInfo[i][0], allInfo[i][1], allInfo[i][2], violation, allInfo[i][6], str(allInfo[i][5]))

    def AddRow(self, relation_ID, driver_ID, FCS, violation, sum, date_str):
        rowPosition = self.FinesTable.rowCount()
        self.FinesTable.insertRow(rowPosition)

        self.FinesTable.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(str(relation_ID)))
        self.FinesTable.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(str(driver_ID)))
        self.FinesTable.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(FCS))
        self.FinesTable.setItem(rowPosition, 3, QtWidgets.QTableWidgetItem(violation))
        self.FinesTable.setItem(rowPosition, 4, QtWidgets.QTableWidgetItem(str(sum)))
        self.FinesTable.setItem(rowPosition, 5, QtWidgets.QTableWidgetItem(date_str))

    def FillTable(self):
        self.driverText.clear()
        self.violationText.clear()
        self.sumText.clear()
        self.ApplyBtn.setEnabled(False)
        self.FinesTable.clearContents()
        self.FinesTable.setRowCount(0)
        query = f"SELECT * FROM driver_violation WHERE has_the_fine_been_paid = 0;"
        self.mycursor.execute(query)
        self.con.commit()
        allInfo = self.mycursor.fetchall()
        countIfFines = len(allInfo)
        for i in range(0, countIfFines):
            query = f"SELECT violation FROM violation_list WHERE violation_ID = {allInfo[i][3]}"
            self.mycursor.execute(query)
            self.con.commit()
            (violation,) = self.mycursor.fetchone()
            self.AddRow(allInfo[i][0], allInfo[i][1], allInfo[i][2], violation, allInfo[i][6], str(allInfo[i][5]))

    def SelectedRow(self):
        self.driverText.clear()
        self.violationText.clear()
        self.sumText.clear()
        self.ApplyBtn.setEnabled(False)
        selectedItems = self.FinesTable.selectedItems()
        selectedRow = self.FinesTable.currentItem().row()
        selectedItemslen = len(selectedItems)
        if (selectedItemslen == 1): # and selectedRow[0].text().isdigit() and selectedRow[1].text().isdigit() and not selectedRow[2].text().isdigit() and not selectedRow[3].text().isdigit() and selectedRow[4].text().isdigit()):
            self.driverText.setText(self.FinesTable.item(selectedRow, 2).text())
            self.violationText.setText(self.FinesTable.item(selectedRow, 3).text())
            self.sumText.setText(self.FinesTable.item(selectedRow, 4).text())
            self.ApplyBtn.setEnabled(True)